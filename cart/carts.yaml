---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: carts
  namespace: default
  labels:
    app.kubernetes.io/name: carts
    app.kubernetes.io/instance: carts
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: carts
      app.kubernetes.io/instance: carts
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/actuator/prometheus"
      labels:
        app.kubernetes.io/name: carts
        app.kubernetes.io/instance: carts
    spec:
      imagePullSecrets:
        - name: regcred
      serviceAccountName: carts
      securityContext:
        fsGroup: 1000
      containers:
        - name: carts
          image: "public.ecr.aws/aws-containers/retail-store-sample-cart:1.2.2"
          imagePullPolicy: Always
          securityContext:
            capabilities:
              drop: ["ALL"]
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          env:
            - name: JAVA_OPTS
              value: "-XX:MaxRAMPercentage=75.0 -Djava.security.egd=file:/dev/urandom"
          envFrom:
            - configMapRef:
                name: carts-config
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 10
          resources:
            limits:
              memory: 512Mi
              cpu: 500m
            requests:
              cpu: 256m
              memory: 512Mi
          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory

---
apiVersion: v1
kind: Service
metadata:
  name: carts
  namespace: default
  labels:
    app.kubernetes.io/name: carts
    app.kubernetes.io/instance: carts
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
  selector:
    app.kubernetes.io/name: carts
    app.kubernetes.io/instance: carts